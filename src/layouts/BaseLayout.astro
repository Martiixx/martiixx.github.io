---
import '../styles/styles.css';
import SEO from '../components/SEO.astro';
import Analytics from '../components/Analytics.astro';
import PerformanceMonitor from '../components/PerformanceMonitor.astro';
import ThemeToggle from '../components/ThemeToggle.astro';
import SmoothScroll from '../components/SmoothScroll.astro';
import Animations from '../components/Animations.astro';

interface Props {
  title: string;
  description?: string;
  image?: string;
  article?: boolean;
  publishedTime?: string;
  modifiedTime?: string;
  author?: string;
  tags?: string[];
  canonicalURL?: string;
}

const { 
  title, 
  description = "Software Engineer Consultant specializing in backend architecture, microservices, and high-performance systems. Available for consulting projects and technical leadership.",
  image,
  article = false,
  publishedTime,
  modifiedTime,
  author,
  tags = [],
  canonicalURL
} = Astro.props;
---

<!DOCTYPE html>
<html lang="en" data-theme="dark">
  <head>
    <SEO 
      title={title}
      description={description}
      image={image}
      article={article}
      publishedTime={publishedTime}
      modifiedTime={modifiedTime}
      author={author}
      tags={tags}
      canonicalURL={canonicalURL}
    />
    <title>{title}</title>
  </head>
  <body>
    <header>
      <nav>
        <div class="nav-content">
          <a href="/" class="logo">
            <img src="https://pub-55f502b1bb8a47b18e001af1f25c9d6c.r2.dev/profile-picture.jpeg" class="profile-pic" alt="Profile picture" />
            <span>{title}</span>
          </a>
          <div class="nav-links">
            <a href="/">Home</a>
            <a href="/projects">Projects</a>
            <a href="/blog">Blog</a>
            <a href="/about">About</a>
            <a href="/contact">Contact</a>
          </div>
          <div class="nav-actions">
            <ThemeToggle />
            <button class="menu-btn" aria-label="Toggle mobile menu" aria-expanded="false">
              <svg class="menu-icon" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                <line x1="3" y1="12" x2="21" y2="12"/>
                <line x1="3" y1="6" x2="21" y2="6"/>
                <line x1="3" y1="18" x2="21" y2="18"/>
              </svg>
              <svg class="close-icon" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                <line x1="18" y1="6" x2="6" y2="18"/>
                <line x1="6" y1="6" x2="18" y2="18"/>
              </svg>
            </button>
          </div>
        </div>
        <div class="mobile-menu" aria-hidden="true">
          <div class="mobile-menu-content">
            <a href="/" class="mobile-menu-link">Home</a>
            <a href="/projects" class="mobile-menu-link">Projects</a>
            <a href="/blog" class="mobile-menu-link">Blog</a>
            <a href="/about" class="mobile-menu-link">About</a>
            <a href="/contact" class="mobile-menu-link">Contact</a>
          </div>
        </div>
      </nav>
    </header>

    <main>
      <slot />
    </main>

    <footer>
      <div class="footer-content">
        <p>&copy; {new Date().getFullYear()} Martin Carrasco. All rights reserved.</p>
      </div>
    </footer>

    <Analytics />
    <PerformanceMonitor />
    <SmoothScroll />
    <Animations />
  </body>
</html>

<script>
  // Mobile menu functionality
  document.addEventListener('DOMContentLoaded', function() {
    const menuBtn = document.querySelector('.menu-btn') as HTMLButtonElement | null;
    const mobileMenu = document.querySelector('.mobile-menu') as HTMLElement | null;
    const mobileMenuLinks = document.querySelectorAll('.mobile-menu-link');
    
    if (!menuBtn || !mobileMenu) return;
    
    function toggleMenu() {
      const isOpen = mobileMenu!.classList.contains('mobile-menu--open');
      
      if (isOpen) {
        mobileMenu!.classList.remove('mobile-menu--open');
        menuBtn!.setAttribute('aria-expanded', 'false');
        document.body.style.overflow = '';
      } else {
        mobileMenu!.classList.add('mobile-menu--open');
        menuBtn!.setAttribute('aria-expanded', 'true');
        document.body.style.overflow = 'hidden';
      }
    }
    
    // Toggle menu on button click
    menuBtn!.addEventListener('click', toggleMenu);
    
    // Close menu when clicking on links
    mobileMenuLinks.forEach(link => {
      link.addEventListener('click', () => {
        mobileMenu!.classList.remove('mobile-menu--open');
        menuBtn!.setAttribute('aria-expanded', 'false');
        document.body.style.overflow = '';
      });
    });
    
    // Close menu when clicking outside
    document.addEventListener('click', (e) => {
      const target = e.target as Node;
      if (!mobileMenu!.contains(target) && !menuBtn!.contains(target)) {
        mobileMenu!.classList.remove('mobile-menu--open');
        menuBtn!.setAttribute('aria-expanded', 'false');
        document.body.style.overflow = '';
      }
    });
    
    // Close menu on escape key
    document.addEventListener('keydown', (e) => {
      if (e.key === 'Escape' && mobileMenu!.classList.contains('mobile-menu--open')) {
        mobileMenu!.classList.remove('mobile-menu--open');
        menuBtn!.setAttribute('aria-expanded', 'false');
        document.body.style.overflow = '';
      }
    });
  });
</script>

<style>
  /* Reset and base styles */
  :root {
    /* Dark theme (default) */
    --primary-color: #f23551;
    --text-color: #fff;
    --background-color: #181c23;
    --muted-text: #b0b4be;
    --header-bg: #232733;
    --card-bg: #1a202c;
    --border-color: #2d3748;
    --shadow-color: rgba(0, 0, 0, 0.1);
    --hover-bg: #2d3748;
  }

  /* Light theme */
  [data-theme="light"] {
    --primary-color: #f23551;
    --text-color: #1a202c;
    --background-color: #ffffff;
    --muted-text: #4a5568;
    --header-bg: #f7fafc;
    --card-bg: #ffffff;
    --border-color: #e2e8f0;
    --shadow-color: rgba(0, 0, 0, 0.05);
    --hover-bg: #f1f5f9;
  }

  * {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
  }

  body {
    font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
    line-height: 1.6;
    color: var(--text-color);
    background-color: var(--background-color);
    transition: background-color 0.3s ease, color 0.3s ease;
  }

  /* Header styles */
  header {
    background-color: var(--header-bg);
    box-shadow: 0 2px 4px var(--shadow-color);
    position: sticky;
    top: 0;
    z-index: 100;
    transition: background-color 0.3s ease;
  }

  .nav-content {
    max-width: 1200px;
    margin: 0 auto;
    padding: 1rem;
    display: flex;
    justify-content: space-between;
    align-items: center;
  }

  .logo {
    font-size: 1.5rem;
    font-weight: bold;
    color: var(--text-color);
    text-decoration: none;
    display: flex;
    align-items: center;
    gap: 0.5rem;
    transition: color 0.3s ease;
  }

  .logo:hover {
    color: var(--primary-color);
  }

  .profile-pic {
    width: 40px;
    height: 40px;
    border-radius: 50%;
    object-fit: cover;
    border: 2px solid var(--primary-color);
    transition: border-color 0.3s ease;
  }

  .nav-links {
    display: flex;
    gap: 2rem;
  }

  .nav-links a {
    color: var(--muted-text);
    text-decoration: none;
    transition: color 0.3s ease;
    position: relative;
    font-weight: 500;
  }

  .nav-links a:hover {
    color: var(--primary-color);
  }

  .nav-actions {
    display: flex;
    align-items: center;
    gap: 1rem;
  }

  /* Main content styles */
  main {
    max-width: 1200px;
    margin: 0 auto;
    padding: 2rem 1rem;
    min-height: calc(100vh - 140px);
  }

  /* Footer styles */
  footer {
    background-color: var(--header-bg);
    padding: 2rem 0;
    margin-top: auto;
    color: var(--muted-text);
    transition: background-color 0.3s ease;
  }

  .footer-content {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 1rem;
    text-align: center;
  }

  /* Mobile menu button */
  .menu-btn {
    display: none;
    background: none;
    border: none;
    color: var(--text-color);
    cursor: pointer;
    padding: 0.5rem;
    border-radius: 0.375rem;
    transition: all 0.2s ease;
    position: relative;
  }

  .menu-btn:hover {
    background-color: var(--hover-bg);
  }

  .menu-btn:focus {
    outline: 2px solid var(--primary-color);
    outline-offset: 2px;
  }

  .menu-icon,
  .close-icon {
    display: block;
    transition: opacity 0.2s ease;
  }

  .close-icon {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    opacity: 0;
  }

  .menu-btn[aria-expanded="true"] .menu-icon {
    opacity: 0;
  }

  .menu-btn[aria-expanded="true"] .close-icon {
    opacity: 1;
  }

  /* Mobile menu */
  .mobile-menu {
    position: fixed;
    top: 0;
    right: -100%;
    width: 100%;
    max-width: 400px;
    height: 100vh;
    background: var(--header-bg);
    z-index: 200;
    transition: right 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    box-shadow: -4px 0 20px var(--shadow-color);
  }

  .mobile-menu--open {
    right: 0;
  }

  .mobile-menu-content {
    padding: 6rem 2rem 2rem;
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }

  .mobile-menu-link {
    color: var(--text-color);
    text-decoration: none;
    font-size: 1.25rem;
    font-weight: 500;
    padding: 1rem;
    border-radius: 0.5rem;
    transition: all 0.2s ease;
    display: block;
  }

  .mobile-menu-link:hover {
    background: var(--hover-bg);
    color: var(--primary-color);
    transform: translateX(0.5rem);
  }

  /* Responsive design */
  @media (max-width: 900px) {
    .nav-links {
      display: none;
    }
    
    .menu-btn {
      display: block;
    }
  }

  @media (min-width: 901px) {
    .mobile-menu {
      display: none;
    }
  }

  /* Enhanced focus styles */
  a:focus,
  button:focus {
    outline: 2px solid var(--primary-color);
    outline-offset: 2px;
  }

  /* Smooth transitions for theme changes */
  * {
    transition: background-color 0.3s ease, color 0.3s ease, border-color 0.3s ease;
  }

  /* Overlay for mobile menu */
  .mobile-menu::before {
    content: '';
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    background: rgba(0, 0, 0, 0.5);
    opacity: 0;
    visibility: hidden;
    transition: all 0.3s ease;
    z-index: -1;
  }

  .mobile-menu--open::before {
    opacity: 1;
    visibility: visible;
  }
</style> 