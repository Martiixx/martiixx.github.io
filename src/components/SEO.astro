---
export interface Props {
  title: string;
  description: string;
  image?: string;
  article?: boolean;
  publishedTime?: string;
  modifiedTime?: string;
  author?: string;
  tags?: string[];
  canonicalURL?: string;
}

const {
  title,
  description,
  image = "https://pub-55f502b1bb8a47b18e001af1f25c9d6c.r2.dev/profile-picture.jpeg",
  article = false,
  publishedTime,
  modifiedTime,
  author = "Martin Carrasco",
  tags = [],
  canonicalURL = Astro.url.href,
} = Astro.props;

const siteName = "Martin Carrasco - Software Engineer Consultant";
const siteURL = "https://www.martiixx.dev";

// Structured data for Person
const personStructuredData = {
  "@context": "https://schema.org",
  "@type": "Person",
  "name": "Martin Carrasco",
  "jobTitle": "Software Engineer Consultant",
  "description": "Experienced Software Engineer Consultant specializing in backend architecture, microservices, and high-performance systems.",
  "url": siteURL,
  "image": "https://pub-55f502b1bb8a47b18e001af1f25c9d6c.r2.dev/profile-picture.jpeg",
  "sameAs": [
    "https://github.com/martiixx",
    "https://linkedin.com/in/martin-carrasco-godoy"
  ],
  "knowsAbout": [
    "Backend Architecture",
    "Microservices",
    "TypeScript",
    "Node.js",
    "NestJS",
    "Kafka",
    "PostgreSQL",
    "MongoDB",
    "Redis",
    "Docker",
    "Kubernetes",
    "AWS"
  ],
  "worksFor": {
    "@type": "Organization",
    "name": "Apiux"
  }
};

// Structured data for Article (if it's a blog post)
const articleStructuredData = article ? {
  "@context": "https://schema.org",
  "@type": "Article",
  "headline": title,
  "description": description,
  "image": image,
  "author": {
    "@type": "Person",
    "name": author
  },
  "publisher": {
    "@type": "Organization",
    "name": siteName,
    "logo": {
      "@type": "ImageObject",
      "url": "https://pub-55f502b1bb8a47b18e001af1f25c9d6c.r2.dev/profile-picture.jpeg"
    }
  },
  "datePublished": publishedTime,
  "dateModified": modifiedTime || publishedTime,
  "mainEntityOfPage": {
    "@type": "WebPage",
    "@id": canonicalURL
  },
  "keywords": tags.join(", ")
} : null;

// Structured data for WebSite
const websiteStructuredData = {
  "@context": "https://schema.org",
  "@type": "WebSite",
  "name": siteName,
  "description": "Software Engineer Consultant specializing in backend architecture, microservices, and high-performance systems.",
  "url": siteURL,
  "potentialAction": {
    "@type": "SearchAction",
    "target": {
      "@type": "EntryPoint",
      "urlTemplate": `${siteURL}/blog?search={search_term_string}`
    },
    "query-input": "required name=search_term_string"
  }
};
---

<!-- Basic Meta Tags -->
<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<meta name="description" content={description} />
<meta name="author" content={author} />
<meta name="robots" content="index, follow" />
<link rel="canonical" href={canonicalURL} />

<!-- Open Graph Meta Tags -->
<meta property="og:type" content={article ? "article" : "website"} />
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta property="og:image" content={image} />
<meta property="og:url" content={canonicalURL} />
<meta property="og:site_name" content={siteName} />
<meta property="og:locale" content="en_US" />

{article && (
  <>
    <meta property="article:author" content={author} />
    <meta property="article:published_time" content={publishedTime} />
    {modifiedTime && <meta property="article:modified_time" content={modifiedTime} />}
    {tags.map(tag => <meta property="article:tag" content={tag} />)}
  </>
)}

<!-- Twitter Card Meta Tags -->
<meta name="twitter:card" content="summary_large_image" />
<meta name="twitter:title" content={title} />
<meta name="twitter:description" content={description} />
<meta name="twitter:image" content={image} />
<meta name="twitter:creator" content="@martiixx" />
<meta name="twitter:site" content="@martiixx" />

<!-- Additional Meta Tags -->
<meta name="keywords" content={tags.join(", ")} />
<meta name="theme-color" content="#f23551" />
<meta name="msapplication-TileColor" content="#f23551" />

<!-- Favicon and App Icons -->
<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
<link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
<link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png" />
<link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png" />
<link rel="manifest" href="/site.webmanifest" />

<!-- Preconnect to external domains -->
<link rel="preconnect" href="https://fonts.googleapis.com" />
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />

<!-- Structured Data -->
<script type="application/ld+json" set:html={JSON.stringify(personStructuredData)} />
<script type="application/ld+json" set:html={JSON.stringify(websiteStructuredData)} />
{articleStructuredData && (
  <script type="application/ld+json" set:html={JSON.stringify(articleStructuredData)} />
)} 