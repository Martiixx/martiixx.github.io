---
interface Props {
  size?: 'small' | 'medium' | 'large';
  color?: string;
  text?: string;
}

const { 
  size = 'medium', 
  color = 'var(--primary-color)', 
  text = 'Loading...' 
} = Astro.props;
---

<div class={`loading-spinner ${size}`} role="status" aria-label={text}>
  <div class="spinner" style={`--spinner-color: ${color}`}>
    <div class="spinner-ring"></div>
    <div class="spinner-ring"></div>
    <div class="spinner-ring"></div>
  </div>
  {text && <span class="loading-text">{text}</span>}
</div>

<style>
  .loading-spinner {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    gap: 1rem;
  }

  .spinner {
    position: relative;
    display: inline-block;
  }

  .spinner-ring {
    position: absolute;
    border: 2px solid transparent;
    border-top: 2px solid var(--spinner-color, var(--primary-color));
    border-radius: 50%;
    animation: spin 1.2s linear infinite;
  }

  .spinner-ring:nth-child(1) {
    width: 100%;
    height: 100%;
    animation-delay: 0s;
  }

  .spinner-ring:nth-child(2) {
    width: 80%;
    height: 80%;
    top: 10%;
    left: 10%;
    animation-delay: -0.4s;
  }

  .spinner-ring:nth-child(3) {
    width: 60%;
    height: 60%;
    top: 20%;
    left: 20%;
    animation-delay: -0.8s;
  }

  @keyframes spin {
    0% {
      transform: rotate(0deg);
    }
    100% {
      transform: rotate(360deg);
    }
  }

  .loading-text {
    color: var(--muted-text);
    font-size: 0.9rem;
    font-weight: 500;
  }

  /* Size variants */
  .loading-spinner.small .spinner {
    width: 24px;
    height: 24px;
  }

  .loading-spinner.small .loading-text {
    font-size: 0.8rem;
  }

  .loading-spinner.medium .spinner {
    width: 40px;
    height: 40px;
  }

  .loading-spinner.large .spinner {
    width: 60px;
    height: 60px;
  }

  .loading-spinner.large .loading-text {
    font-size: 1rem;
  }

  /* Fade in animation */
  .loading-spinner {
    animation: fadeIn 0.3s ease-in-out;
  }

  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(10px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
</style> 