---
import BaseLayout from '../layouts/BaseLayout.astro';
import projectsData from '../data/projects.json';

// Get all projects for the projects page
const allProjects = projectsData;
---

<BaseLayout title="Projects - Martin Carrasco" description="Explore my software engineering projects including backend systems, microservices, and web applications">
  <!-- Projects Header -->
  <section class="projects-header">
    <div class="container">
      <h1 class="page-title">My Projects</h1>
      <p class="page-subtitle">
        A collection of my work showcasing backend architecture, microservices, and modern web technologies.
      </p>
    </div>
  </section>

  <!-- Projects Filter and Search -->
  <section class="projects-filters">
    <div class="container">
      <div class="filters-content">
        <div class="search-box">
          <input 
            type="text" 
            id="project-search" 
            placeholder="Search projects..." 
            class="search-input"
          />
          <svg class="search-icon" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <circle cx="11" cy="11" r="8"/>
            <path d="m21 21-4.35-4.35"/>
          </svg>
        </div>
        <div class="filter-tags">
          <button class="filter-tag active" data-filter="all">All</button>
          <button class="filter-tag" data-filter="backend">Backend</button>
          <button class="filter-tag" data-filter="microservices">Microservices</button>
          <button class="filter-tag" data-filter="frontend">Frontend</button>
          <button class="filter-tag" data-filter="devops">DevOps</button>
        </div>
      </div>
    </div>
  </section>

  <!-- Projects Grid -->
  <section class="projects-grid-section">
    <div class="container">
      <div class="projects-grid" id="projects-grid">
        {allProjects.map((project) => (
          <div class="project-card" data-categories={project.technologies.join(' ').toLowerCase()}>
            <div class="project-image">
              <a href={project.links.github} target="_blank" rel="noopener noreferrer">
                <img src={project.image} alt={project.name} class="project-img" />
              </a>
            </div>
            <div class="project-content">
              <h3 class="project-title">{project.name}</h3>
              <p class="project-description">{project.description}</p>
              <div class="project-technologies">
                {project.technologies.map((tech) => (
                  <span class="tech-tag">{tech}</span>
                ))}
              </div>
              <div class="project-links">
                <a href={project.links.github} class="project-link" target="_blank" rel="noopener noreferrer">
                  <svg width="16" height="16" viewBox="0 0 24 24" fill="currentColor">
                    <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/>
                  </svg>
                  View Code
                </a>
              </div>
            </div>
          </div>
        ))}
      </div>
      
      <!-- No Results Message -->
      <div id="no-results" class="no-results" style="display: none;">
        <h3>No projects found</h3>
        <p>Try adjusting your search or filter criteria.</p>
      </div>
    </div>
  </section>
</BaseLayout>

<style>
  .projects-header {
    text-align: center;
    margin-bottom: 3rem;
  }

  .page-title {
    font-size: 3rem;
    font-weight: bold;
    margin-bottom: 1rem;
    background: linear-gradient(135deg, var(--primary-color), #ff6b6b);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }

  .page-subtitle {
    font-size: 1.2rem;
    color: var(--muted-text);
    max-width: 600px;
    margin: 0 auto;
  }

  .projects-filters {
    margin-bottom: 3rem;
  }

  .filters-content {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
    align-items: center;
  }

  .search-box {
    position: relative;
    max-width: 400px;
    width: 100%;
  }

  .search-input {
    width: 100%;
    padding: 0.75rem 1rem 0.75rem 2.5rem;
    border: 2px solid #2d3748;
    border-radius: 8px;
    background: #1a202c;
    color: var(--text-color);
    font-size: 1rem;
    transition: border-color 0.3s ease;
  }

  .search-input:focus {
    outline: none;
    border-color: var(--primary-color);
  }

  .search-icon {
    position: absolute;
    left: 0.75rem;
    top: 50%;
    transform: translateY(-50%);
    color: var(--muted-text);
  }

  .filter-tags {
    display: flex;
    gap: 0.5rem;
    flex-wrap: wrap;
    justify-content: center;
  }

  .filter-tag {
    padding: 0.5rem 1rem;
    border: 2px solid #2d3748;
    border-radius: 20px;
    background: transparent;
    color: var(--muted-text);
    cursor: pointer;
    transition: all 0.3s ease;
    font-size: 0.9rem;
  }

  .filter-tag:hover,
  .filter-tag.active {
    border-color: var(--primary-color);
    color: var(--primary-color);
    background: rgba(242, 53, 81, 0.1);
  }

  .projects-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
    gap: 2rem;
    margin-bottom: 3rem;
  }

  .project-card {
    background: #1a202c;
    border-radius: 12px;
    overflow: hidden;
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    border: 1px solid #2d3748;
  }

  .project-card:hover {
    transform: translateY(-4px);
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.3);
  }

  .project-image {
    position: relative;
    overflow: hidden;
  }

  .project-img {
    width: 100%;
    height: 200px;
    object-fit: cover;
    transition: transform 0.3s ease;
  }

  .project-card:hover .project-img {
    transform: scale(1.05);
  }

  .project-content {
    padding: 1.5rem;
  }

  .project-title {
    font-size: 1.25rem;
    font-weight: bold;
    margin-bottom: 0.75rem;
    color: var(--text-color);
  }

  .project-description {
    color: var(--muted-text);
    margin-bottom: 1rem;
    line-height: 1.6;
  }

  .project-technologies {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
    margin-bottom: 1.5rem;
  }

  .tech-tag {
    padding: 0.25rem 0.75rem;
    background: rgba(242, 53, 81, 0.2);
    color: var(--primary-color);
    border-radius: 12px;
    font-size: 0.8rem;
    font-weight: 500;
  }

  .project-links {
    display: flex;
    gap: 1rem;
  }

  .project-link {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.5rem 1rem;
    border: 1px solid var(--primary-color);
    border-radius: 6px;
    color: var(--primary-color);
    text-decoration: none;
    transition: all 0.3s ease;
    font-size: 0.9rem;
  }

  .project-link:hover {
    background: var(--primary-color);
    color: white;
  }

  .no-results {
    text-align: center;
    padding: 3rem;
    color: var(--muted-text);
  }

  .no-results h3 {
    margin-bottom: 1rem;
    color: var(--text-color);
  }

  @media (max-width: 768px) {
    .page-title {
      font-size: 2rem;
    }

    .projects-grid {
      grid-template-columns: 1fr;
    }

    .filter-tags {
      gap: 0.25rem;
    }

    .filter-tag {
      padding: 0.4rem 0.8rem;
      font-size: 0.8rem;
    }
  }
</style>

<script>
  // Project filtering and search functionality
  document.addEventListener('DOMContentLoaded', function() {
    const searchInput = document.getElementById('project-search') as HTMLInputElement;
    const filterTags = document.querySelectorAll('.filter-tag');
    const projectCards = document.querySelectorAll('.project-card');
    const noResults = document.getElementById('no-results');

    function filterProjects() {
      if (!searchInput || !noResults) return;
      
      const searchTerm = searchInput.value.toLowerCase();
      const activeFilter = document.querySelector('.filter-tag.active') as HTMLElement;
      const activeFilterValue = activeFilter?.dataset.filter || 'all';
      
      let visibleCount = 0;

      projectCards.forEach(card => {
        const cardElement = card as HTMLElement;
        const title = cardElement.querySelector('.project-title')?.textContent?.toLowerCase() || '';
        const description = cardElement.querySelector('.project-description')?.textContent?.toLowerCase() || '';
        const technologies = cardElement.querySelector('.project-technologies')?.textContent?.toLowerCase() || '';
        const categories = cardElement.dataset.categories || '';

        const matchesSearch = title.includes(searchTerm) || 
                            description.includes(searchTerm) || 
                            technologies.includes(searchTerm);
        
        const matchesFilter = activeFilterValue === 'all' || 
                            categories.includes(activeFilterValue);

        if (matchesSearch && matchesFilter) {
          cardElement.style.display = 'block';
          visibleCount++;
        } else {
          cardElement.style.display = 'none';
        }
      });

      // Show/hide no results message
      if (visibleCount === 0) {
        noResults.style.display = 'block';
      } else {
        noResults.style.display = 'none';
      }
    }

    // Search functionality
    searchInput?.addEventListener('input', filterProjects);

    // Filter functionality
    filterTags.forEach(tag => {
      tag.addEventListener('click', function(this: HTMLElement) {
        // Remove active class from all tags
        filterTags.forEach(t => t.classList.remove('active'));
        // Add active class to clicked tag
        this.classList.add('active');
        // Filter projects
        filterProjects();
      });
    });
  });
</script> 